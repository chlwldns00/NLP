코드 상세 분석
<Meta_json_to_excel.py> -> Json파일을 csv변환하여 excel파일로 저장하는 코드
근데 자꾸 json을 읽어와서 딕셔너리로 바꿔 그안에 있는 key값을 참조하는데 엉뚱한 키값을 자꾸 참조하래서, 얘네가 깃헙에 올린 json파일 말고, 다른 json파일로 테스트 코드를 짠거 같다
==read_json_files_to_dataframe:== 
지정된 디렉토리에서 JSON 파일을 읽어들이고, 각 파일의 내용을 Pandas DataFrame으로 변환하여 저장합니다.
"experiments" 배열의 값[?](line35) 들을 DataFrame으로 변환하고, 파일 이름을 기반으로 각 DataFrame을 딕셔너리에 저장합니다.
==save_source_to_excel(dataframe, output_file):==
각 DataFrame을 엑셀 파일로 저장하는 함수입니다.
엑셀 파일을 생성하고 각 DataFrame을 엑셀 시트로 추가하여 저장합니다.
gpt-3.5-turbo-0301, gpt-3.5-turbo, gpt-4-0314, gpt-4 엔진에 대한 결과를 별도의 시트로 저장하고 통계 정보를 계산합니다.
‘no_ctx_source’
‘iterrows’ ->행 정보들을 순회 
==save_dataframes_to_txt(dataframes, output_file):==
각 DataFrame을 텍스트 파일로 저장하는 함수입니다.
각 엔진의 결과를 텍스트 파일로 출력하고, 일부 내용을 요약하여 저장합니다.
==save_dataframes_to_excel(dataframes, output_file) 함수==
각 DataFrame을 엑셀 파일로 저장하는 함수입니다.
엑셀 파일을 생성하고 각 DataFrame을 엑셀 시트로 추가하여 저장합니다.
각 엔진의 결과를 별도의 시트로 저장하고 통계 정보를 계산합니다.
==main():==
Tkinter GUI에서 filedialog를 열어 사용자로부터 디렉토리 경로를 입력받습니다.
read_json_files_to_dataframe 함수를 사용하여 JSON 파일을 DataFrame으로 변환하고, 저장된 결과를 엑셀 파일 또는 텍스트 파일로 출력합니다.

논문에서의 언급: 분석을 용이하게 하기위해 Json파일을 처리하여 Excel 스프레드시트로 변환하였습니다. -> 근데 왜 json을 excel로 바꾸는게 분석에 용이한지 에대한 설명자체는 안나와있습니다.



ExcelWriter 객체 생성: 이 객체는 df를 엑셀 파일로 쓰기 위한 엔진으로 XlsxWriter를 사용하며, output_file에 지정된 경로와 이름으로 엑셀 파일을 생성합니다.

데이터 프레임 순회: for sheet_name, df in dataframes.items() 코드를 사용하여 dataframes 딕셔너리의 각 항목을 순회합니다. 각 항목은 엑셀 워크시트로 저장될 데이터 프레임과 해당 워크시트의 이름인 sheet_name으로 구성되어 있습니다.


no_ctx_sources_value에서 얻은 텍스트를 줄 바꿈 문자(\n)를 기준으로 분할하여 source_list에 저장합니다.
각 행의 "question" 열 값을 question_value에 저장합니다.
source_list의 각 항목에서 정규 표현식을 사용하여 특수 문자를 제거하고 실제 "source" 값을 추출합니다. 추출된 값은 s에 저장됩니다.
"question"과 "source" 값을 가지는 딕셔너리를 dict_list에 추가합니다.
데이터 프레임 정렬: df의 "source" 열을 기준으로 역순으로 정렬합니다. 이렇게 하면 "source"가 긴 항목부터 나타납니다.

데이터 프레임 저장: 정리된 데이터 프레임 df를 ExcelWriter 객체에 저장합니다. 이렇게 하면 엑셀 파일에 각 워크시트로 데이터가 저장됩니다.

Excel 파일 저장: 모든 데이터 프레임을 엑셀 파일에 저장한 후, writer.save()를 호출하여 엑셀 파일을 생성하고 저장합니다.







dataframes의 key값에
'no_ctx_sources'
'question' 이 있어야한다. 근데, 어딨는지 모르겠다

contexts_1.json
Answer the question based on the context below:
context:~
question:~

contexts.json

meta_json py 2개를 코드 그대로 분석해봤는데, 코드 자체로는 뭐하는 코드인지는 알겠는데,  중간중간의 json을 dict형태로 바꾸고 dict형태의 객체의 key값을 참조하는 부분에서, 예시 데이터에 나와있는 json 키 값과는 다른 코드 , 그리고 어쩃든 hallucination 테스트를 했을거면, embedding , retreive과정을 거쳣을거여서 그거 부터 코드를 올라가면서 봐보자. 일단 openAI package의 OpenAIComms.py 가 가장많이 등장하고 거기부터 정리해보자






