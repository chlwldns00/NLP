textrank
-
graph ranking 단어 그래프에서는 그래프를 대표하는 핵심 단어를 선택하는 문제
-
pagerank 각 단어/페이지를 거칠때 참조를 하는 쪽이 참조를 당하는 쪽에게 점수를 주어서 그점수가 높은 단어/페이지가 중요하다고 rank를 부여하는 방식



TextRank 는 키워드 추출 기능과 핵심 문장 추출 기능, 두 가지를 제공합니다. [키워드를 추출]하기 위해서 먼저 <단어 그래프>를 만들어야 합니다

근데 이거 영어 기반으로 설계되어 있는 코드인거같은게, tokenizing을 영어 기반 으로 한다.. 아니네 konlpy 사용하네

그럼 어떻게 문장에서 [핵심키워드를 추출하는가에대한 원리]
<co-occurence> 기반
단어들의 등장빈도를 모두 표시한뒤 그들을 선으로 이어서 단어의 그래프를 만든다.(최소 빈도수 이상 등장한 단어들)
이 단어들의 거리을 dict of dict 형식의 그래프로 만든뒤, sparse matrix를 만든다.

[문단에서 핵심문장을 추출하는가에 대한원리]







   "애플리케이션 클라이언트": "JEUS 서버와 별도의 JVM에서 수행되는 standalone 클라이언트",
   "JEUS": "클라이언트 컨테이너를 사용하여 Jakarta EE 환경에서 애플리케이션 호출 및 서비스 제공",
   "클라이언트 컨테이너": "Naming Service, Scheduler, Security 등의 JEUS 서비스 사용",
   "JEUS 클라이언트 라이브러리": "JNDI, Security 등의 서비스 사용 가능하지만 Dependency Injection, JEUS Scheduler 등의 서비스는 사용 불가",
   "Jakarta EE 스펙": "더 자세한 내용 확인 가능",
   "JEUS XML 스키마": "jeusclientdd.xml로 참고 가능"



사용자의 지식수준을 파악해야하는 이유 -> 그래야  사용자 지식 범위내에서 최적의 다음질문의 추천이 이어지니까, 
근데 일단 질문을 하면, 그 질문에서 핵심적으로 물어보고자 했던 키워드에 대한 설명은 무조건 나옴 따라서 그거 자체의 내용에 대해서는 추가적으로 궁금한 사항이 없을거란말이지, 그래서 최대한 그 질문의 키워드와는 거리가 먼 조금은 아리송한 키워드에대한 설명이 나올수도 있으니까 그 키워드는 모를수도있으니까, 



질문답변 db를 가지고 있다면 new질문에 대해서, 답변한 new답변, 거기서 일단 1차로 new질문 과 tf-idf score 벡터상으로 가까운 질문을 질문db에서 찾아서 추천해주고,  2차로 new질문,new답변의 핵심키워드를 추출한후, 그 키워드를 비교해서 동일한 키워드는 배제하고, word2vec모델을 사용해서 단어:단어 유사도ㄹ중 가장 낮은 하위n개의 키워드를 select, 마지막으로 이 n개의 키워드와 가장 score가 높은 답변(아직 어떻게 이 score를 구할지 못정함) 에 해당하는 질문을 생성하거나, db에서 가져오는것으로 구성된다



기술적flow
결과 flow
결과해석 terminal output사진도 캡처
결론의미부여


시나리오 1
문맥을 참고한 질문키워드를 포함하고 있는 단어는 일단 배제 ex JEUS:JEUS 클라이언트 -> 삭제   ===> 이게 더 중요한 키워드를 판별하기 좋다고 판단하엿다.

시나리오 2 
동일한것만 일단 배제 ex JEUS:JEUS  둘중 어느게 나을까
