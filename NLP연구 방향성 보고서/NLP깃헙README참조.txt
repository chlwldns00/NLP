text-rank// 이건왜쓴거지
추천 질문 알고리즘의 핵심인 문장/문단의 핵심 키워드 추출을 할수있는 알고리즘을 찾아보던중 page-rank방식을 이용한 text-rank 라이브러리와 krwordrank 라이브러리를 사용해 보았다. -> 하지만 이는 단어 집합사이의 거리를 기반으로 한것으로 어쩔수 없이 문맥을 고려하지 못하고 단어간의 빈도,유사도만을 고려하여서 핵심 키워드 추출에는 맞지 않다고 판별 내리게 되었다.


챗봇연구
답변에서 hallucination 방지를 위한 tag experiment 시행
LLM EMbedding test -> bert-uncased-model의 토크나이징/임베딩 테스트+finetunning테스트  + langchain 을 활용해서 문서기반으로 답변을 하는 챗봇을 테스트 해보면서 우리 챗봇은 Q/A DB를 기반으로 답변하는것을 목표로 하고 있기 떄문에 , langchain으로 article기반으로 챗봇이 답을 잘 낼수있는지 출처를 표기하여 테스트를 해보았다.
results => LLM모델 mteb 지표 성능테스트 코드 테스트  참고 링크 : https://huggingface.co/spaces/mteb/leaderboard 10/17~
후속질문추천시스템-> 개발중인 챗봇에 후속질문을 추천해주는 기능을 추가하기 위해 개발 
1차 추천알고리즘 :


프로젝트에 대한 소개와 본인이 수행한 역할을 상세히 작성해주세요
프로젝트 소개
RAG기술과 LLM, 생성AI모델을 사용한 메뉴얼 기반에서 대답하는, Hallucination을 최소로 발생시키게 하는 챗봇 개발 목표
프로젝트 system flow
각 과정에 대한 상세한 내용은 회사 기밀유지 조항에 의해 적을수없을것같습니다
사용자가 자사 시스템,은행 관련해서 질문을 날리면 FE 단의 ReactTypescript가 이를 쿼리로 플라스크 서버에 던져주고, 이를 LLM모델이 있는 FastAPI로 전달해 임베딩 작업을 거친다. 이후 MYSQL DB에 있는 자사 메뉴얼과 은행 메뉴얼에서 RAG방식으로 뽑은 질문/답변 데이터 와 메뉴얼 데이터 에서 retreiver 를 사용해 user질문과 관련이 있는 부분을 추출해 내고, 이 추출한 내용을 context로 삼고, 'user 질문에 대한 답변을 context를 참고해서 생성해 달라' 라는 느낌의 prompt를 사용해서 생성AI 모델에 request를 보내고 응답을 받으면 사용자에게 전달한다.

내가 개발담당한 부분
-user query를 RAG를 위해 임베딩할 LLM들의 Deploy test 와 성능 비교-
RAG를 위해서는 최대한 정교하게 목적에 맞게 자연어를 임베딩 해야하기 때문에, 한국어 임베딩 모델, 들을 gradio 모듈과 webUI를 사용하여 Deploy하였고, 여러가지 케이스의 테스트 과정을 수행했습니다(테스트 케이스는 유출하지 마라고 하셔서 깃허브에는 올려놓지 못했습니다) 또한 영어로 질문이 들어오는 경우를 고려해 영어를 한국어로 번역해주는 LLM들도 Deploy하고 여러가지 케이스의 테스트 과정을 수행했습니다
-Hallucination을 방지하는 tag 기법 연구 -
생성AI모델이 프롬프트를 받아서 생성하는 정보중에 아무리 프롬프트를 견고하게 짠다고 해도, 외부지식이 들어갈수밖에 없기 때문에, 이 Hallucination을 방지하기 위해서, Hallucination관련 논문을 읽었고, 그를 활용하여, 프롬프트 내 context와 이 context를 뽑아낸 본문 지식에 tag를 다는 방식으로 Hallucination을 방지하려고 해보았습니다.

-후속질문추천 알고리즘 개발-
사용자의 질문 수준과 , 이 질문을 한 사용자의 우리 서비스나 은행 서비스에 대한 지식 수준을 고려하여 후속질문을 추천해주는 질문 추천 알고리즘을모델링 했다. 질문을 예상질문 수준에 너무 동떨어지게 했을때,  마치 자동완성 기능과 같이, 질문과 최대한 유사하고 정교한 질문을 후속 질문으로 추천해주는 알고리즘과, 사용자의 질문과 나온 답변에서 각각의 문맥을 고려한 핵심 키워드를 추출해서, 

머신러닝/딥러닝
흥미가 원래 있었고, 데이터 분석
transformer를 활용한 최신 LLM deploy 및 테스트
NLP관련 테스크, 알고리즘 짜봤고 (자연어를 임베딩하고, 자연어에서 핵심 키워드 문장 추출해보고, 이를 통해서 질문 추천을 할수있는 알고리즘을 설계해보고)